extends RefCounted

# CLASS GOT AUTOGENERATED DON'T CHANGE MANUALLY. CHANGES CAN BE OVERWRITTEN EASILY.

## Interaction with the Twitch REST API.
class_name TwitchRestAPI

## Maximal tries to reauthrorize before giving up the request.
const MAX_AUTH_ERRORS = 3;

var client: BufferedHTTPClient;
var auth: TwitchAuth;

func _init(twitch_auth: TwitchAuth) -> void:
	client = BufferedHTTPClient.new(TwitchSetting.api_host);
	auth = twitch_auth;

func request(path: String, method: int, body: Variant = "", content_type: String = "", error_count: int = 0) -> BufferedHTTPClient.ResponseData:
	var header : Dictionary = {
		"Authorization": "Bearer %s" % [await auth.get_token()],
		"Client-ID": TwitchSetting.client_id
	};
	if content_type != "":
		header["Content-Type"] = content_type;

	var request_body: String = "";
	if body is Object && body.has_method("to_json"):
		request_body = body.to_json()
	else:
		request_body = JSON.stringify(body);

	var request = client.request(path, method, header, request_body)
	var response = await client.wait_for_request(request);

	# Token expired / or missing permissions
	if response.client.get_response_code() == 401 || response.client.get_response_code() == 403:
		await auth.login();
		if error_count + 1 < MAX_AUTH_ERRORS:
			return await request(path, method, body, content_type, error_count + 1);
		else:
			# Give up the request after trying multiple times and
			# return an empty response with correct error code
			var empty_response = client.empty_response(request);
			empty_response.response_code = response.client.get_response_code();
			return empty_response;
	return response;

{for methods as method}
{method}

{/for}

## Converts unix timestamp to RFC 3339 (example: 2021-10-27T00:00:00Z) when passed a string uses as is
static func get_rfc_3339_date_format(time: Variant) -> String:
	if typeof(time) == TYPE_INT:
		var date_time = Time.get_datetime_dict_from_unix_time(time);
		return "%s-%02d-%02dT%02d:%02d:%02dZ" % [date_time['year'], date_time['month'], date_time['day'], date_time['hour'], date_time['minute'], date_time['second']];
	return str(time);
