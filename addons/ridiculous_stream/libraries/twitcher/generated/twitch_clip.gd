@tool
extends RefCounted

# CLASS GOT AUTOGENERATED DON'T CHANGE MANUALLY. CHANGES CAN BE OVERWRITTEN EASILY.

class_name TwitchClip

## An ID that uniquely identifies the clip.
var id: String;
## A URL to the clip.
var url: String;
## A URL that you can use in an iframe to embed the clip (see [Embedding Video and Clips](https://dev.twitch.tv/docs/embed/video-and-clips)).
var embed_url: String;
## An ID that identifies the broadcaster that the video was clipped from.
var broadcaster_id: String;
## The broadcaster’s display name.
var broadcaster_name: String;
## An ID that identifies the user that created the clip.
var creator_id: String;
## The user’s display name.
var creator_name: String;
## An ID that identifies the video that the clip came from. This field contains an empty string if the video is not available.
var video_id: String;
## The ID of the game that was being played when the clip was created.
var game_id: String;
## The ISO 639-1 two-letter language code that the broadcaster broadcasts in. For example, _en_ for English. The value is _other_ if the broadcaster uses a language that Twitch doesn’t support.
var language: String;
## The title of the clip.
var title: String;
## The number of times the clip has been viewed.
var view_count: int;
## The date and time of when the clip was created. The date and time is in RFC3339 format.
var created_at: Variant;
## A URL to a thumbnail image of the clip.
var thumbnail_url: String;
## The length of the clip, in seconds. Precision is 0.1.
var duration: Variant;
## The zero-based offset, in seconds, to where the clip starts in the video (VOD). Is **null** if the video is not available or hasn’t been created yet from the live stream (see `video_id`).      Note that there’s a delay between when a clip is created during a broadcast and when the offset is set. During the delay period, `vod_offset` is **null**. The delay is indeterminant but is typically minutes long.
var vod_offset: int;
## A Boolean value that indicates if the clip is featured or not.
var is_featured: bool;

static func from_json(d: Dictionary) -> TwitchClip:
	var result = TwitchClip.new();
	if d.has("id") && d["id"] != null:
		result.id = d["id"];
	if d.has("url") && d["url"] != null:
		result.url = d["url"];
	if d.has("embed_url") && d["embed_url"] != null:
		result.embed_url = d["embed_url"];
	if d.has("broadcaster_id") && d["broadcaster_id"] != null:
		result.broadcaster_id = d["broadcaster_id"];
	if d.has("broadcaster_name") && d["broadcaster_name"] != null:
		result.broadcaster_name = d["broadcaster_name"];
	if d.has("creator_id") && d["creator_id"] != null:
		result.creator_id = d["creator_id"];
	if d.has("creator_name") && d["creator_name"] != null:
		result.creator_name = d["creator_name"];
	if d.has("video_id") && d["video_id"] != null:
		result.video_id = d["video_id"];
	if d.has("game_id") && d["game_id"] != null:
		result.game_id = d["game_id"];
	if d.has("language") && d["language"] != null:
		result.language = d["language"];
	if d.has("title") && d["title"] != null:
		result.title = d["title"];
	if d.has("view_count") && d["view_count"] != null:
		result.view_count = d["view_count"];
	if d.has("created_at") && d["created_at"] != null:
		result.created_at = d["created_at"];
	if d.has("thumbnail_url") && d["thumbnail_url"] != null:
		result.thumbnail_url = d["thumbnail_url"];
	if d.has("duration") && d["duration"] != null:
		result.duration = d["duration"];
	if d.has("vod_offset") && d["vod_offset"] != null:
		result.vod_offset = d["vod_offset"];
	if d.has("is_featured") && d["is_featured"] != null:
		result.is_featured = d["is_featured"];
	return result;

func to_dict() -> Dictionary:
	var d: Dictionary = {};
	d["id"] = id;
	d["url"] = url;
	d["embed_url"] = embed_url;
	d["broadcaster_id"] = broadcaster_id;
	d["broadcaster_name"] = broadcaster_name;
	d["creator_id"] = creator_id;
	d["creator_name"] = creator_name;
	d["video_id"] = video_id;
	d["game_id"] = game_id;
	d["language"] = language;
	d["title"] = title;
	d["view_count"] = view_count;
	d["created_at"] = created_at;
	d["thumbnail_url"] = thumbnail_url;
	d["duration"] = duration;
	d["vod_offset"] = vod_offset;
	d["is_featured"] = is_featured;
	return d;

func to_json() -> String:
	return JSON.stringify(to_dict());

